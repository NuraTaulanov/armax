import os
from django.conf import settings
from config.settings import TELEGRAM_BOT_TOKEN, WEBHOOK_URL
from rest_framework.views import APIView
from rest_framework.response import Response
from telebot import TeleBot, types
from django.db import models
from request.models import Request
from request.models import NICHE_CHOICES
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, KeyboardButton, ReplyKeyboardMarkup
from time import sleep

TOKEN = TELEGRAM_BOT_TOKEN

bot = TeleBot(TOKEN, threaded=False)


class UpdateBot(APIView):
    def post(self, request):
        # –°—é–¥–∞ –¥–æ–ª–∂–Ω—ã –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º –∏ –¥–∞–ª–µ–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º
        json_str = request.body.decode('UTF-8')
        update = types.Update.de_json(json_str)
        bot.process_new_updates([update])

        return Response({'code': 200})



questions = [
    "–í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –∏–º—è:",
    "–í–≤–µ–¥–∏—Ç–µ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
    "–í–≤–µ–¥–∏—Ç–µ –í–∞—à—É –ø–æ—á—Ç—É:",
    "–û–ø–∏—à–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ —Å–≤–æ–π –ø—Ä–æ–µ–∫—Ç:",
    "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–º–µ—Ä–Ω—ã–µ —Å—Ä–æ–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞:",
    "–í–≤–µ–¥–∏—Ç–µ –±—é–¥–∂–µ—Ç –Ω–∞ –ø—Ä–æ–µ–∫—Ç:"
]

# –°–æ–∑–¥–∞–µ–º Unicode —Å–∏–º–≤–æ–ª—ã –¥–ª—è —Ñ–ª–∞–≥–æ–≤
kazakhstan_flag_emoji = 'üá∞üáø'
russian_flag_emoji = 'üá∑üá∫'
greatbritain_flag_emoji = 'üá¨üáß'

chat_language = {}

class LanguageHandler:
    def __init__(self,language,chat_id):
        self.language=language
        self.chat_id=chat_id
        chat_language[chat_id]=language

    def start(self):
        self.send_video()
        self.send_start_message()

    def send_start_message(self):
        bot.send_message(self.chat_id,self.start_language_text(),reply_markup=self.get_keyboard())
    
    def send_video(self):
        bot.send_video(self.chat_id,self.get_video())

    def start_language_text(self):
        if self.language=='–∫–∞–∑–∞–∫—à–∞':
            return '–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ, –ú–µ–Ω —Å—ñ–∑–¥—ñ“£ –∂–µ–∫–µ –∫”©–º–µ–∫—à—ñ“£—ñ–∑ Armax –±–æ—Ç—ã–º—ã–Ω'
        elif self.language=='—Ä—É—Å—Å–∫–∏–π':
            return '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è –≤–∞—à –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –±–æ—Ç Armax'
        elif self.language=='–∞–Ω–≥–ª–∏–π—Å–∫–∏–π':
            return 'Hello, I am your personal assistant bot Armax'

        
    def choose_question_language(self):
        if self.language=='–∫–∞–∑–∞–∫—à–∞':
            return '–°—ñ–∑–¥—ñ “Ø–Ω–∞—Ç–∞—Ç—ã–Ω —Å“±—Ä–∞—É–ª–∞—Ä–¥–∞–Ω —Ç–∞“£–¥–∞“£—ã–∑.'
        elif self.language=='—Ä—É—Å—Å–∫–∏–π':
            return '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å:'
        elif self.language=='–∞–Ω–≥–ª–∏–π—Å–∫–∏–π':
            return "Choose the question you're interested in:"
    
    def get_kazakh_keyboard(self):
        kazakh_keyboard=ReplyKeyboardMarkup(resize_keyboard=True,row_width=2)
        kazakh_buttons = [
            KeyboardButton('“ö–∞–∂–µ—Ç—Ç—ñ —Å“±—Ä–∞—É–ª–∞—Ä'),
            KeyboardButton('–ö–µ—Ä—ñ –±–∞–π–ª–∞–Ω—ã—Å'),
            KeyboardButton('–ë–∞–π–ª–∞–Ω—ã—Å'),
            KeyboardButton('–¢—ñ–ª–¥—ñ –∞—É—ã—Å—Ç—ã—Ä—É'),
            KeyboardButton('–ë–æ—Ç—Ç—ã “õ–∞–π—Ç–∞ —ñ—Å–∫–µ “õ–æ—Å—É'),
        ]
        kazakh_keyboard.add(*kazakh_buttons)
        return kazakh_keyboard
    
    def get_russian_keyboard(self):
        russian_keyboard=ReplyKeyboardMarkup(resize_keyboard=True,row_width=2)
        russian_buttons = [
            KeyboardButton('–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã'),
            KeyboardButton('–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å'),
            KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã'),
            KeyboardButton('–ü–æ–º–µ–Ω—è—Ç—å —è–∑—ã–∫'),
            KeyboardButton('–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞'),
        ]
        russian_keyboard.add(*russian_buttons)
        return russian_keyboard
    
    def get_english_keyboard(self):
        english_keyboard=ReplyKeyboardMarkup(resize_keyboard=True,row_width=2)
        english_buttons=[
            KeyboardButton('FAQ'),
            KeyboardButton('Feedback'),
            KeyboardButton('Contacts'),
            KeyboardButton('Change language'),
            KeyboardButton('Restart bot'),
        ]
        english_keyboard.add(*english_buttons)
        return english_keyboard
    
    def get_keyboard(self):
        if self.language=='–∫–∞–∑–∞–∫—à–∞':
            return self.get_kazakh_keyboard()
        elif self.language=='—Ä—É—Å—Å–∫–∏–π':
            return self.get_russian_keyboard()
        elif self.language=='–∞–Ω–≥–ª–∏–π—Å–∫–∏–π':
            return self.get_english_keyboard()

    def get_video(self):
        if self.language=='–∫–∞–∑–∞–∫—à–∞':
            # video_path = 'video.mp4'
            video_path = 'botapp/static/botapp/video/video.mp4'

            video = open(video_path, 'rb')
            return video
        elif self.language=='—Ä—É—Å—Å–∫–∏–π':
            video_path = 'botapp/static/botapp/video/video.mp4'
            # video_path = 'video.mp4'
            video = open(video_path, 'rb')
            return video
        elif self.language=='–∞–Ω–≥–ª–∏–π—Å–∫–∏–π':
            video_path = 'botapp/static/botapp/video/video.mp4'
            # video_path = 'video.mp4'
            video = open(video_path, 'rb')
            return video
    
@bot.message_handler(commands=['start'])      
def choose_language(message):
    chat_id = message.chat.id
    keyboard_language = InlineKeyboardMarkup()
    kazakhstan_flag_button = InlineKeyboardButton(
        text=f'üá∞üáø K–∞–∑–∞“õ—à–∞', callback_data='–∫–∞–∑–∞–∫—à–∞')
    russian_flag_button = InlineKeyboardButton(
        text=f'üá∑üá∫ –†—É—Å—Å–∫–∏–π', callback_data='—Ä—É—Å—Å–∫–∏–π')
    english_flag_button = InlineKeyboardButton(
        text=f'üá¨üáß English', callback_data='–∞–Ω–≥–ª–∏–π—Å–∫–∏–π')
    keyboard_language.add(kazakhstan_flag_button, russian_flag_button, english_flag_button)
    bot.send_message(chat_id, 'üá∑üá∫ –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:\nüá∞üáø –¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞—É:\nüá¨üáß Choose a language:', reply_markup=keyboard_language)

faq_answers = {
    'kaz_faq1': "–ö–∞–∫ –º–µ–Ω—ñ —Å—ñ–∑–≥–µ —Ö–∞–±–∞—Ä–ª–∞—Å—É“ì–∞ –±–æ–ª–∞–¥—ã?",
    'kaz_faq2': "–°—ñ–∑ –Ω–µ —Ç–∞“ì–∞–π—ã–Ω–¥–∞—É –∂–∞—Å–∞—É –∂“±–º—ã—Å—Ç–∞—Ä—ã–Ω –æ—Ä—ã–Ω–¥–∞–π—Å—ã–∑?",
    'kaz_faq3': "–ë–æ—Ç —Ç—ñ–ª—ñ–Ω “õ–∞–ª–∞–π –∞—É—ã—Å—Ç—ã—Ä—É“ì–∞ –±–æ–ª–∞–¥—ã?",
    'kaz_faq4': "–ë–æ—Ç—Ç—ã “õ–∞–π—Ç–∞ —ñ—Å–∫–µ “õ–æ—Å—É “õ–∞–ª–∞–π?",
    'kaz_faq5': "Armax Studio –Ω–µ “õ–∞–Ω–¥–∞–π?",
    'rus_faq1': "–í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –ø–æ –∞–¥—Ä–µ—Å—É —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã: example@email.com",
    'rus_faq2': "–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º —à–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä —É—Å–ª—É–≥, –≤–∫–ª—é—á–∞—è –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É, –º–æ–±–∏–ª—å–Ω—É—é —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –ò–¢-–ø—Ä–æ–µ–∫—Ç–∞–º.",
    'rus_faq3': "–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞ –±–æ—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /setlang –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.",
    'rus_faq4': "–î–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç.",
    'rus_faq5': "Armax Studio - —ç—Ç–æ –∫–æ–º–ø–∞–Ω–∏—è, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∞—è—Å—è –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –∏ –≤–µ–±-–ø—Ä–æ–µ–∫—Ç–∞—Ö.",
    'eng_faq1': "You can contact us via email at example@email.com",
    'eng_faq2': "We offer a wide range of services, including web development, mobile app development, and IT project consulting.",
    'eng_faq3': "To change the bot's language, use the /setlang command and follow the instructions.",
    'eng_faq4': "To restart the bot, simply restart the application or the server it's running on.",
    'eng_faq5': "Armax Studio is a company specializing in software development and web projects.",
    }    


class ButtonHandler:
    def __init__(self, message_text, chat_id):
        self.message_text = message_text
        self.chat_id = chat_id

    def call_keyboards(self):
        keyboard_faq = InlineKeyboardMarkup(row_width=1)

        if self.message_text == '–ë–∞–π–ª–∞–Ω—ã—Å':
            return "TOO 'ARMAX STUDIO'–ë—ñ–∑–¥—ñ“£ –º–µ–∫–µ–Ω-–∂–∞–π—ã: –ê—Å—Ç–∞–Ω–∞, “ö–∞–±–∞–Ω–±–∞–π –±–∞—Ç—ã—Ä –∫”©—à–µ—Å—ñ, 11/5\n–¢–µ–ª–µ—Ñ–æ–Ω: +77719052733\n–≠–ª–µ–∫—Ç—Ä–æ–Ω–¥—ã –ø–æ—à—Ç–∞: armax1studio@gmail.com"
        elif self.message_text == '–ö–æ–Ω—Ç–∞–∫—Ç—ã':
            return "TOO 'ARMAX STUDIO'\n–ù–∞—à –∞–¥—Ä–µ—Å: –ê—Å—Ç–∞–Ω–∞, —É–ª. –ö–∞–±–∞–Ω–±–∞–π –ë–∞—Ç—ã—Ä–∞, 11/5\n–¢–µ–ª–µ—Ñ–æ–Ω: +77719052733\n–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞: armax1studio@gmail.com"
        elif self.message_text == 'Contacts':
            return "TOO 'ARMAX STUDIO'Our address: Astana, Kabanbai Batyr str., 11/5\nPhone: +77719052733\nEmail: armax1studio@gmail.com"
        
        
        elif self.message_text=='“ö–∞–∂–µ—Ç—Ç—ñ —Å“±—Ä–∞—É–ª–∞—Ä':
            faq_button1 = InlineKeyboardButton(text='–ö–∞–∫ –º–µ–Ω—ñ —Å—ñ–∑–≥–µ —Ö–∞–±–∞—Ä–ª–∞—Å—É“ì–∞ –±–æ–ª–∞–¥—ã?', callback_data='kaz_faq1')
            faq_button2 = InlineKeyboardButton(text='–°—ñ–∑ –Ω–µ —Ç–∞“ì–∞–π—ã–Ω–¥–∞—É –∂–∞—Å–∞—É –∂“±–º—ã—Å—Ç–∞—Ä—ã–Ω –æ—Ä—ã–Ω–¥–∞–π—Å—ã–∑?', callback_data='kaz_faq2')
            faq_button3 = InlineKeyboardButton(text='–ë–æ—Ç —Ç—ñ–ª—ñ–Ω “õ–∞–ª–∞–π –∞—É—ã—Å—Ç—ã—Ä—É“ì–∞ –±–æ–ª–∞–¥—ã?', callback_data='kaz_faq3')
            faq_button4 = InlineKeyboardButton(text='–ë–æ—Ç—Ç—ã “õ–∞–π—Ç–∞ —ñ—Å–∫–µ “õ–æ—Å—É “õ–∞–ª–∞–π?', callback_data='kaz_faq4')
            faq_button5 = InlineKeyboardButton(text='Armax Studio –Ω–µ “õ–∞–Ω–¥–∞–π?', callback_data='kaz_faq5')
            keyboard_faq.add(faq_button1, faq_button2, faq_button3, faq_button4, faq_button5)
            return keyboard_faq


        elif self.message_text=='–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã':
            faq_button1 = InlineKeyboardButton(text='–ö–∞–∫ —è –º–æ–≥—É —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏?', callback_data='rus_faq1')
            faq_button2 = InlineKeyboardButton(text='–ö–∞–∫–∏–µ —É—Å–ª—É–≥–∏ –≤—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ?', callback_data='rus_faq2')
            faq_button3 = InlineKeyboardButton(text='–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –±–æ—Ç–∞?', callback_data='rus_faq3')
            faq_button4 = InlineKeyboardButton(text='–ö–∞–∫ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞?', callback_data='rus_faq4')
            faq_button5 = InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ Armax Studio?', callback_data='rus_faq5')
            keyboard_faq.add(faq_button1,faq_button2,faq_button3,faq_button4,faq_button5)
            return keyboard_faq
        
        elif self.message_text=='FAQ':
            faq_button1 = InlineKeyboardButton(text='How can I contact you?', callback_data='eng_faq1')
            faq_button2 = InlineKeyboardButton(text='What services do you offer?', callback_data='eng_faq2')
            faq_button3 = InlineKeyboardButton(text='How to change the bot language?', callback_data='eng_faq3')
            faq_button4 = InlineKeyboardButton(text='How to restart the bot?', callback_data='eng_faq4')
            faq_button5 = InlineKeyboardButton(text='What is Armax Studio?', callback_data='eng_faq5')
            keyboard_faq.add(faq_button1, faq_button2, faq_button3, faq_button4, faq_button5)
            return keyboard_faq

        
        elif self.message_text=='–ö–µ—Ä—ñ –±–∞–π–ª–∞–Ω—ã—Å':
            return
        elif self.message_text=='–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å':
            return
        elif self.message_text=='Feedback':
            return
        

    def choose_language(self):
        keyboard_language = InlineKeyboardMarkup()
        kazakhstan_flag_button = InlineKeyboardButton(
            text=f'üá∞üáø K–∞–∑–∞“õ—à–∞', callback_data='–∫–∞–∑–∞–∫—à–∞')
        russian_flag_button = InlineKeyboardButton(
            text=f'üá∑üá∫ –†—É—Å—Å–∫–∏–π', callback_data='—Ä—É—Å—Å–∫–∏–π')
        english_flag_button = InlineKeyboardButton(
            text=f'üá¨üáß English', callback_data='–∞–Ω–≥–ª–∏–π—Å–∫–∏–π')
        keyboard_language.add(kazakhstan_flag_button, russian_flag_button, english_flag_button)
        bot.send_message(self.chat_id, 'üá∑üá∫ –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:\nüá∞üáø –¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞—É:\nüá¨üáß Choose a language:', reply_markup=keyboard_language)

    

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_text_message(message):
    chat_id = message.chat.id
    message_text = message.text
    button_handler = ButtonHandler(message_text, chat_id)
    if message_text == 'FAQ' or message_text == '–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã' or message_text=='“ö–∞–∂–µ—Ç—Ç—ñ —Å“±—Ä–∞—É–ª–∞—Ä':
        # –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å Inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤

        keyboard_faq = button_handler.call_keyboards()
        bot.send_message(chat_id,message_text, reply_markup=keyboard_faq)
    elif message_text == '–ü–æ–º–µ–Ω—è—Ç—å —è–∑—ã–∫' or message_text == 'Change language' or message_text=='–¢—ñ–ª–¥—ñ –∞—É—ã—Å—Ç—ã—Ä—É':
        button_handler.choose_language()
    elif message_text == '–ë–æ—Ç—Ç—ã “õ–∞–π—Ç–∞ —ñ—Å–∫–µ “õ–æ—Å—É' or message_text == '–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞' or message_text=='Restart bot':
        button_handler.choose_language()
    else:
        # –í –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –∏–ª–∏ –¥—Ä—É–≥—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        response_text = button_handler.call_keyboards()
        bot.send_message(chat_id, response_text)

@bot.callback_query_handler(func=lambda call: call.data in ['–∫–∞–∑–∞–∫—à–∞', '—Ä—É—Å—Å–∫–∏–π', '–∞–Ω–≥–ª–∏–π—Å–∫–∏–π'])
def call_choose_language(call):
    chat_id = call.message.chat.id
    language=call.data
    language_handler = LanguageHandler(language,chat_id)
    language_handler.start()

@bot.callback_query_handler(func=lambda call:call.data in faq_answers)
def handle_button(call):
    call_data=call.data
    chat_id=call.message.chat.id
    if call_data in faq_answers:
        bot.send_message(chat_id,faq_answers[call_data])


# Webhook
bot.remove_webhook()
bot.set_webhook(url=WEBHOOK_URL+'/webhook/')